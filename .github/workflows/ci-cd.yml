name: CI/CD - Tests et Analyse SonarQube

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  tests:
    name: Tests Unitaires et Couverture
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: waste2product_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better analysis

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, ctype, json, pdo, pdo_mysql, dom, curl, libxml, zip
          coverage: xdebug

      - name: Install Dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Prepare environment
        run: |
          cp .env.example .env
          echo "APP_KEY=base64:$(openssl rand -base64 32)" >> .env

      - name: Execute tests with coverage
        run: vendor/bin/phpunit --coverage-clover=coverage/clover.xml --coverage-html=coverage/html
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: waste2product_test
          DB_USERNAME: root
          DB_PASSWORD: root

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            coverage/clover.xml
            coverage/html

  sonarqube:
    name: Analyse SonarCloud
    runs-on: ubuntu-latest
    needs: tests
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download coverage reports
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: coverage/

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  docker:
    name: Build et Push Docker Image
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/waste2product:latest
            ${{ secrets.DOCKER_USERNAME }}/waste2product:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/waste2product:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/waste2product:buildcache,mode=max
          
